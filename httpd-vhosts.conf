
# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
# Non-SSL or http hosts



<VirtualHost *:80>
       DocumentRoot "/opt/lampp/htdocs/"
       ServerName hyperdata.it
<Directory />

    Options +FollowSymLinks +Indexes
    AllowOverride All
    Require all granted
</Directory>


	<IfModule mod_headers.c>
		Header set Access-Control-Allow-Origin "*"
	</IfModule>

	Redirect permanent / https://hyperdata.it/


RewriteEngine On
# RewriteCond %{SERVER_NAME} hyperdata.it
# RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
RewriteCond %{HTTP_HOST} ^hyperdata\.it [NC]
RewriteCond %{SERVER_PORT} 80
RewriteRule ^(.*)$ https://hyperdata.it/$1 [R,L]

#### FOR GITEA
   <Proxy *>
         Order allow,deny
         Allow from all
    </Proxy>
    AllowEncodedSlashes NoDecode
    # Note: no trailing slash after either /git or port
    ProxyPass /git http://localhost:3000 nocanon

RewriteCond %{SERVER_NAME} =hyperdata.it
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>


<VirtualHost  *:80>
    ServerName danny.ayers.name
    Redirect permanent / https://danny.ayers.name
</VirtualHost>
<VirtualHost *:443>
       DocumentRoot "/opt/lampp/htdocs/solid/"
       ServerName danny.ayers.name

<Directory />
     Options +FollowSymLinks  +Indexes

    AllowOverride None
    Require all granted
    </Directory>

       SSLEngine on

       SSLEngine On
       SSLProxyEngine On
        SSLProxyVerify None
        SSLProxyCheckPeerCN Off
        SSLProxyCheckPeerName Off
        SSLProxyCheckPeerExpire Off
        ProxyPreserveHost On

        <IfModule mod_headers.c>
                Header set Access-Control-Allow-Origin "*"
        </IfModule>

                Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/fuseki.hyperdata.it/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/fuseki.hyperdata.it/privkey.pem
</VirtualHost>


<VirtualHost fuseki.hyperdata.it:80>
       DocumentRoot "/opt/lampp/htdocs/"
       ServerName fuseki.hyperdata.it

        <IfModule mod_headers.c>
                Header set Access-Control-Allow-Origin "*"
        </IfModule>

# was commented before
#        Redirect permanent / https://hyperdata.it/
#RewriteEngine on
#RewriteCond %{SERVER_NAME} hyperdata.it
#RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
#        RewriteRule ^/\.well-known/acme-challenge/([A-Za-z0-9-_=]+)$ /var/lib/letsencrypt/http_challenges/$1 [END]
    

        ProxyPass / http://127.0.0.1:3030/
        ProxyPassReverse / http://127.0.0.1:3030 

# was commented before
#        ProxyPass / https://hyperdata.it:3030/
#        ProxyPassReverse / https://hyperdata.it:3030

RewriteEngine on
RewriteCond %{SERVER_NAME} =fuseki.hyperdata.it
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<VirtualHost  *:80>
    ServerName echo.hyperdata.it
    Redirect permanent / https://echo.hyperdata.it
RewriteEngine on
RewriteCond %{SERVER_NAME} =echo.hyperdata.it
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<VirtualHost *:443>
  ServerAdmin danny@gmail.com
  ServerName echo.hyperdata.it

  ProxyRequests off
  LimitRequestLine  150000
  LimitRequestFieldSize 150000
  <Proxy *>
    Order deny,allow
    Allow from all
  </Proxy>

  <Location />
    ProxyPass http://localhost:3001/
    ProxyPassReverse http://localhost:3001/
  </Location>

  SSLEngine on
  SSLProtocol all -SSLv2 -SSLv3
  SSLCipherSuite ALL:!DH:!EXPORT:!RC4:+HIGH:+MEDIUM:!LOW:!aNULL:!eNULL

 # SSLCertificateFile   /etc/ssl/2__.example.fr.crt
 # SSLCertificateKeyFile  /root/serveurA.key
 # SSLCertificateChainFile    /etc/ssl/1_root_bundle.crt 

                Include /etc/letsencrypt/options-ssl-apache.conf


#SSLCertificateFile /etc/letsencrypt/live/fuseki.hyperdata.it/fullchain.pem
#SSLCertificateKeyFile /etc/letsencrypt/live/fuseki.hyperdata.it/privkey.pem
SSLCertificateFile /etc/letsencrypt/live/fuseki.hyperdata.it/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/fuseki.hyperdata.it/privkey.pem
</VirtualHost>


<VirtualHost  *:80>
    ServerName node.hyperdata.it
   DocumentRoot "/opt/lampp/htdocs/"

    Redirect permanent / https://node.hyperdata.it
#RewriteEngine on
#RewriteCond %{SERVER_NAME} =echo.hyperdata.it
#RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]

    Redirect permanent / https://node.hyperdata.it
#RewriteEngine on
#RewriteCond %{SERVER_NAME} =node.hyperdata.it
#RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
RewriteEngine on
RewriteCond %{SERVER_NAME} =node.hyperdata.it
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>
<VirtualHost *:443>
  ServerAdmin danny@gmail.com
  ServerName node.hyperdata.it

  ProxyRequests off
  LimitRequestLine  150000
  LimitRequestFieldSize 150000
  <Proxy *>
    Order deny,allow
    Allow from all
  </Proxy>

 <Location />
   ProxyPass http://localhost:3003/
   ProxyPassReverse http://localhost:3003/
  </Location>

#  SSLEngine on
#  SSLProtocol all -SSLv2 -SSLv3
#  SSLCipherSuite ALL:!DH:!EXPORT:!RC4:+HIGH:+MEDIUM:!LOW:!aNULL:!eNULL

 # SSLCertificateFile   /etc/ssl/2__.example.fr.crt
 # SSLCertificateKeyFile  /root/serveurA.key
 # SSLCertificateChainFile    /etc/ssl/1_root_bundle.crt 

#                Include /etc/letsencrypt/options-ssl-apache.conf


#SSLCertificateFile /etc/letsencrypt/live/fuseki.hyperdata.it/fullchain.pem
#SSLCertificateKeyFile /etc/letsencrypt/live/fuseki.hyperdata.it/privkey.pem
#SSLCertificateFile /etc/letsencrypt/live/fuseki.hyperdata.it/fullchain.pem
#SSLCertificateKeyFile /etc/letsencrypt/live/fuseki.hyperdata.it/privkey.pem

Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/fuseki.hyperdata.it/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/fuseki.hyperdata.it/privkey.pem
</VirtualHost>

<VirtualHost  *:80>
    ServerName hyperdata.it
    Redirect permanent / https://hyperdata.it
</VirtualHost>

<VirtualHost  *:80>
    ServerName hyperdata.it
    Redirect permanent / https://hyperdata.it
</VirtualHost>

# SSL or https Hosts
<VirtualHost *:443>
       DocumentRoot "/opt/lampp/htdocs/"
       ServerName hyperdata.it

<Directory />
     Options +FollowSymLinks  +Indexes
       
    AllowOverride None
    Require all granted
    </Directory>

       SSLEngine on

       SSLEngine On
       SSLProxyEngine On
	SSLProxyVerify None
	SSLProxyCheckPeerCN Off
	SSLProxyCheckPeerName Off
	SSLProxyCheckPeerExpire Off
	ProxyPreserveHost On

	ProxyPass /webbeep/ http://hyperdata.it:8888/
	ProxyPassReverse /webbeep/ http://hyperdata.it:8888/

        ProxyPass /fuseki/ https://hyperdata.it:3030/
        ProxyPassReverse /fuseki/ https://hyperdata.it:3030/


        <IfModule mod_headers.c>
                Header set Access-Control-Allow-Origin "*"
        </IfModule>

                Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/fuseki.hyperdata.it/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/fuseki.hyperdata.it/privkey.pem
</VirtualHost>


