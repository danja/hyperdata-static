
# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
# Non-SSL or http hosts

<VirtualHost *:80>
    DocumentRoot "/opt/lampp/htdocs/"
    ServerName hyperdata.it
   
    <Directory />
      Options +FollowSymLinks +Indexes
      AllowOverride All
      Require all granted
    </Directory>

	  <IfModule mod_headers.c>
		  Header set Access-Control-Allow-Origin "*"
	  </IfModule>

    RewriteEngine On
	  Redirect permanent / https://hyperdata.it/
  # RewriteCond %{SERVER_NAME} hyperdata.it
  # RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
    RewriteCond %{HTTP_HOST} ^hyperdata\.it [NC]
    RewriteCond %{SERVER_PORT} 80
    RewriteRule ^(.*)$ https://hyperdata.it/$1 [R,L]

#### FOR GITEA
    <Proxy *>
      Order allow,deny
      Allow from all
    </Proxy>

    AllowEncodedSlashes NoDecode
    # Note: no trailing slash after either /git or port
    ProxyPass /git http://localhost:3000 nocanon

    RewriteCond %{SERVER_NAME} =hyperdata.it
    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]

DavLockDB /usr/local/apache/DavLock
Alias /webdav /var/www/html/webdav
<Directory /var/www/html/webdav>
    DAV On
    DirectoryIndex enabled
    AuthType Basic
    AuthName danja
    AuthUserFile /etc/htpassword/.htpasswd
    Require valid-user
</Directory>
</VirtualHost>


<VirtualHost  *:80>
    ServerName danny.ayers.name
    Redirect permanent / https://danny.ayers.name
</VirtualHost>

<VirtualHost *:443>
    DocumentRoot "/opt/lampp/htdocs/profile/"
    ServerName danny.ayers.name

    <Directory />
      Options +FollowSymLinks  +Indexes
      AllowOverride None
      Require all granted
    </Directory>

    SSLEngine On
    SSLProxyEngine On
    SSLProxyVerify None
    SSLProxyCheckPeerCN Off
    SSLProxyCheckPeerName Off
    SSLProxyCheckPeerExpire Off
    ProxyPreserveHost On

    <IfModule mod_headers.c>
      Header set Access-Control-Allow-Origin "*"
    </IfModule>

    Include /etc/letsencrypt/options-ssl-apache.conf
    SSLCertificateFile /etc/letsencrypt/live/fuseki.hyperdata.it/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/fuseki.hyperdata.it/privkey.pem
</VirtualHost>



# SSL or https Hosts
<VirtualHost *:443>
  DocumentRoot "/opt/lampp/htdocs/"
  ServerName hyperdata.it

  <Directory />
    Options +FollowSymLinks  +Indexes   
    AllowOverride None
    Require all granted
  </Directory>

  SSLEngine on
  SSLProxyEngine On
	SSLProxyVerify None
	SSLProxyCheckPeerCN Off
	SSLProxyCheckPeerName Off
	SSLProxyCheckPeerExpire Off
	ProxyPreserveHost On

	ProxyPass /webbeep/ http://hyperdata.it:8888/
	ProxyPassReverse /webbeep/ http://hyperdata.it:8888/

  ProxyPass /fuseki/ https://hyperdata.it:3030/
  ProxyPassReverse /fuseki/ https://hyperdata.it:3030/

  <IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin "*"
  </IfModule>

  Include /etc/letsencrypt/options-ssl-apache.conf
  SSLCertificateFile /etc/letsencrypt/live/fuseki.hyperdata.it/fullchain.pem
  SSLCertificateKeyFile /etc/letsencrypt/live/fuseki.hyperdata.it/privkey.pem
</VirtualHost>


